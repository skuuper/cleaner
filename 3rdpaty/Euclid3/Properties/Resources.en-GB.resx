<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Cut-icon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Cut-icon.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Stock-Index-Up-icon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Stock-Index-Up-icon.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Delete-icon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Delete-icon.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Insert-icon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Insert-icon.bmp;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Stock-Index-Down-icon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Stock-Index-Down-icon.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="BTN_EXIT" xml:space="preserve">
    <value>&amp;Exit</value>
  </data>
  <data name="BTN_SHOW_MESSAGE" xml:space="preserve">
    <value>&amp;Show message</value>
  </data>
  <data name="BTN_SHOW_POPUP_FORM" xml:space="preserve">
    <value>&amp;Show popup</value>
  </data>
  <data name="LBL_POPUP_TEXT" xml:space="preserve">
    <value>This is a sample, how language can be dynamically changed even in popup forms</value>
  </data>
  <data name="MNU_LANG" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="MNU_LANG_ENG" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="MNU_LANG_FRN" xml:space="preserve">
    <value>French</value>
  </data>
  <data name="MNU_LANG_RUS" xml:space="preserve">
    <value>Russian</value>
  </data>
  <data name="WND_MAIN_TITLE" xml:space="preserve">
    <value>Euclid 3.0β</value>
  </data>
  <data name="MNU_FILE" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="CBX_HEADER" xml:space="preserve">
    <value>Distortions</value>
  </data>
  <data name="CBX_HIDE" xml:space="preserve">
    <value>Hide good</value>
  </data>
  <data name="CBX_MOVEALL" xml:space="preserve">
    <value>Shift all fragments</value>
  </data>
  <data name="CBX_TRANSLADD" xml:space="preserve">
    <value>Significant additions</value>
  </data>
  <data name="CBX_TRANSLCHANGE" xml:space="preserve">
    <value>Significant changes</value>
  </data>
  <data name="CBX_TRANSLOMIT" xml:space="preserve">
    <value>Significant omissions</value>
  </data>
  <data name="FRM_ADDSEGMENT_TITLE" xml:space="preserve">
    <value>Add segments to the sentence</value>
  </data>
  <data name="FRM_CUT_TITLE" xml:space="preserve">
    <value>Remove parts / edit sentence</value>
  </data>
  <data name="LBL_CUT" xml:space="preserve">
    <value>Crop (by ~~~):</value>
  </data>
  <data name="LBL_SENTENCE" xml:space="preserve">
    <value>Sentence:</value>
  </data>
  <data name="MNU_ABOUT" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="MNU_DICTIONARY" xml:space="preserve">
    <value>Load dictionary</value>
  </data>
  <data name="MNU_INTO_CSV" xml:space="preserve">
    <value>Insert metadata into CSV</value>
  </data>
  <data name="MNU_METADATA" xml:space="preserve">
    <value>Metadata</value>
  </data>
  <data name="MNU_OPEN" xml:space="preserve">
    <value>Open parallel texts</value>
  </data>
  <data name="MNU_OPEN_ALIGNED" xml:space="preserve">
    <value>Open an aligned text</value>
  </data>
  <data name="MNU_OPEN_XML" xml:space="preserve">
    <value>Open XML</value>
  </data>
  <data name="MNU_SAVE" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="MNU_SAVEAS" xml:space="preserve">
    <value>Save as...</value>
  </data>
  <data name="STR_FAILURE" xml:space="preserve">
    <value>Could not save the file: </value>
  </data>
  <data name="STR_PROMPT" xml:space="preserve">
    <value>Save the file?</value>
  </data>
  <data name="STR_FAILURE_FOPTIONS" xml:space="preserve">
    <value>Could not open configuration file: </value>
  </data>
  <data name="STR_FAILURE_FPATH" xml:space="preserve">
    <value>Could not locate the program: </value>
  </data>
  <data name="STR_FAILURE_SCUT_O" xml:space="preserve">
    <value>Unable to separate sentences in the original: </value>
  </data>
  <data name="STR_FAILURE_SCUT_T" xml:space="preserve">
    <value>Unable to separate sentences in the translation: </value>
  </data>
  <data name="STR_MABOUT" xml:space="preserve">
    <value>Euclid 3.0β.20130926
A tool for manual alignment of parallel texts for the Russian National Corpus.

All questions and comments should be sent to Timofey Arkhangelskiy (timarkh@gmail.com)</value>
  </data>
  <data name="STR_SAVING" xml:space="preserve">
    <value>Saving</value>
  </data>
  <data name="STR_FDIALOG_FILTER_1" xml:space="preserve">
    <value>Plain text files|*.txt|All|*</value>
  </data>
  <data name="STR_FDIALOG_FILTER_2" xml:space="preserve">
    <value>XML files|*.xml|Plain text files|*.txt|All|*</value>
  </data>
  <data name="STR_FDIALOG_FILTER_3" xml:space="preserve">
    <value>Parallel texts|*.para|All|*</value>
  </data>
  <data name="STR_FDIALOG_FILTER_4" xml:space="preserve">
    <value>Dictionares|*.dic|All|*</value>
  </data>
  <data name="STR_FDIALOG_FILTER_5" xml:space="preserve">
    <value>CSV files|*.csv|All|*</value>
  </data>
  <data name="STR_FDIALOG_FILTER_6" xml:space="preserve">
    <value>XML files|*.xml|All|*</value>
  </data>
  <data name="STR_FDIALOG_TITLE_1" xml:space="preserve">
    <value>Open text</value>
  </data>
  <data name="STR_FDIALOG_TITLE_2" xml:space="preserve">
    <value>Open a translation</value>
  </data>
  <data name="STR_FDIALOG_TITLE_3" xml:space="preserve">
    <value>Save as...</value>
  </data>
  <data name="STR_FDIALOG_TITLE_4" xml:space="preserve">
    <value>Open parallel text (open the original and all the translations in turn; when you are done, press Cancel)</value>
  </data>
  <data name="STR_FDIALOG_TITLE_5" xml:space="preserve">
    <value>Include a dictionary</value>
  </data>
  <data name="STR_FDIALOG_TITLE_6" xml:space="preserve">
    <value>Open CSV</value>
  </data>
  <data name="STR_FDIALOG_TITLE_7" xml:space="preserve">
    <value>Open XML</value>
  </data>
  <data name="STR_SAVE_INXML" xml:space="preserve">
    <value>Save the file in the XML format first.</value>
  </data>
  <data name="MISMATCH_ATTRIBUTES" xml:space="preserve">
    <value>Mismatch attributes:</value>
  </data>
  <data name="MISMATCH_FORMCAPTION" xml:space="preserve">
    <value>Mismatch description</value>
  </data>
  <data name="MISMATCH_LDESC" xml:space="preserve">
    <value>Comment:</value>
  </data>
  <data name="MISMATCH_ORIGTEXT" xml:space="preserve">
    <value>Fragment of the original text</value>
  </data>
  <data name="MISMATCH_SAVE" xml:space="preserve">
    <value>Save mismatch description</value>
  </data>
  <data name="MISMATCH_SAVE_DIALOG" xml:space="preserve">
    <value>Saving</value>
  </data>
  <data name="MISMATCH_TRANSTEXT" xml:space="preserve">
    <value>Fragment of the translation</value>
  </data>
  <data name="MNU_EDITMISMATCH" xml:space="preserve">
    <value>Edit mismatch typology</value>
  </data>
  <data name="MNU_MISMATCHES" xml:space="preserve">
    <value>Mismatches</value>
  </data>
  <data name="MNU_MULTALIGN" xml:space="preserve">
    <value>Multiple alignment (accumulate)</value>
  </data>
  <data name="MNU_MULTALIGNCUT" xml:space="preserve">
    <value>Multiple alignment (cut)</value>
  </data>
  <data name="SAVE_CAPTION" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SAVE_CORPUSFORMAT" xml:space="preserve">
    <value>Corpus format</value>
  </data>
  <data name="SAVE_INTERMEDIATE" xml:space="preserve">
    <value>Intermediate format (can be edited afterwards)</value>
  </data>
  <data name="SAVE_SAVE" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SAVE_SOURCELANG" xml:space="preserve">
    <value>Language of the source:</value>
  </data>
  <data name="SAVE_TRANSLANG" xml:space="preserve">
    <value>Language of the translation:</value>
  </data>
  <data name="TYPOLOGY_ADDATTR" xml:space="preserve">
    <value>Add attribute</value>
  </data>
  <data name="TYPOLOGY_ADDGROUP" xml:space="preserve">
    <value>Add group</value>
  </data>
  <data name="TYPOLOGY_ATTREXISTS" xml:space="preserve">
    <value>An attribute with such a code already exists</value>
  </data>
  <data name="TYPOLOGY_CANCELCHANGES" xml:space="preserve">
    <value>Cancel all changes to the typology</value>
  </data>
  <data name="TYPOLOGY_DATA" xml:space="preserve">
    <value>Data input</value>
  </data>
  <data name="TYPOLOGY_DELELEMENT" xml:space="preserve">
    <value>Delete element</value>
  </data>
  <data name="TYPOLOGY_DESCRIPTION" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="TYPOLOGY_FORMCAPTION" xml:space="preserve">
    <value>Edit mismatch typology</value>
  </data>
  <data name="TYPOLOGY_GROUPCODEEXISTS" xml:space="preserve">
    <value>A group with such a code already exists</value>
  </data>
  <data name="TYPOLOGY_GROUPNAMEEXISTS" xml:space="preserve">
    <value>A group with such a name already exists</value>
  </data>
  <data name="TYPOLOGY_INPUTDESCR" xml:space="preserve">
    <value>Input the description of the new attribute</value>
  </data>
  <data name="TYPOLOGY_INPUTGROUPDESCR" xml:space="preserve">
    <value>Input the description of the new group</value>
  </data>
  <data name="TYPOLOGY_INPUTGROUPNAME" xml:space="preserve">
    <value>Input the name of the new group</value>
  </data>
  <data name="TYPOLOGY_INPUTNAME" xml:space="preserve">
    <value>Input the name of the new attribute</value>
  </data>
  <data name="TYPOLOGY_INPUTNEWCODE" xml:space="preserve">
    <value>Input a code for the new attribute. The code should consist of basic alphanumeric characters</value>
  </data>
  <data name="TYPOLOGY_INPUTNEWGROUPCODE" xml:space="preserve">
    <value>Input a unique code for the new group. The code should consist of basic alphanumeric characters</value>
  </data>
  <data name="TYPOLOGY_SAVEALLCHANGES" xml:space="preserve">
    <value>Save all changes to the typology</value>
  </data>
  <data name="TYPOLOGY_SAVECHANGES" xml:space="preserve">
    <value>Save changes</value>
  </data>
  <data name="TYPOLOGY_SAVING" xml:space="preserve">
    <value>Saving</value>
  </data>
  <data name="TYPOLOGY_SELECTED" xml:space="preserve">
    <value>Selected element:</value>
  </data>
  <data name="TYPOLOGY_UNEXPECTEDCHARACTERS" xml:space="preserve">
    <value>The text contains illegal characters</value>
  </data>
</root>